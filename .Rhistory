p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), aplha = .5)
p3 <- colorRampPalette(c("blue", "green"), aplha = ".5")
p3 <- colorRampPalette(c("blue", "green"), alpha = ".5")
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5, .3))
col <- brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
rm(list = ls())
library(swirl); swirl()
qplot(drv, hwy, mpg, geom = "boxplt")
qplot(drv, hwy, mpg, geom = "boxplot")
qplot(drv, hwy, data =mpg, geom = "boxplot")
qplot(drv, hwy, data =mpg, geom = "boxplot", color = "manufacturer")
qplot(drv, hwy, data =mpg, geom = "boxplot", color =manufacturer)
qplot(hwy, data =mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets  = ". ~ drv")
qplot(displ, hwy, data = mpg, facets  = . ~ drv)
qplot(hwy, data = mpg, facets  = drv ~ ., binwidth = 2)
library(swirl); swirl
library(swirl); swirl()
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
qplot(displ, hwy, data = mpg, facets  = . ~ drv)
dev.off()
qplot(displ, hwy, data = mpg, facets  = . ~ drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)_+ggtitle("Swirl Rules!")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size = 4, alpha = 1/2)+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv, size = 2, alpha = 1/2))+geom_smooth(size = 4,linetype = 3,method = lm, se = FALSE)
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4,linetype = 3,method = lm, se = FALSE)
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4,linetype = 3,method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "1", ylim=c(-3,3))
plot(myx, myy, type = "l", ylim=c(-3,3))
g <- ggplot(testdat, aes(myx, myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(mpg, aes(x = displ, y = hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black" )
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black" )+labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
bye()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
?nlme
View(testdat)
?datasets
library(help = 'datasets')
r <- dataset(rock)
r <- data(rock)
r
data(rock)
?data
data
data()
?rock
View(rock)
xyplot(perm ~ shape | area, peri)
with(rock, xyplot(perm ~ shape | area, peri))
xyplot(rock$perm ~ rock$shape | rock$area, $peri)
xyplot(perm ~ shape | area, peri, data = rock)
xyplot(perm ~ shape | peri, data = rock)
xyplot(peri ~ shape | perm, data = rock)
?lpoints
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
xyplot(Ozone ~ Wind | Month, data = airquality)
p <- xyplot(Ozone ~ Wind | Month, data = airquality)
p
?par
?splom
?trellis.par.set
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
qplot
library(ggplot2)
qplot
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth", model = "l")
qplot(Wind, Ozone, data = airquality, geom = "smooth", model = l)
qplot(Wind, Ozone, data = airquality, geom = "smooth", method = "l")
qplot(Wind, Ozone, data = airquality, geom = ("smooth", model = "l")
qplot(Wind, Ozone, data = airquality, geom = ("smooth", model = "l"))
qplot(Wind, Ozone, data = airquality, geom = "smooth", model = "l"))
qplot(Wind, Ozone, data = airquality, geom = "smooth", model = "l")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
class(airquality$Month)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airqiality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
qplot(Wind, Ozone, data = airquality, facets = .~Month, na.rm = TRYE)
qplot(Wind, Ozone, data = airquality, facets = .~Month, na.rm = TRUE)
?geom
??geom
data(movies)
head(movies)
str(movies)
?panel.loess
?geom_smooth
swirl()
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(x = ssd, ssd$subject == 1)
sub1 <- subset(x = ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
dist(x[,1:3])
dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(cbind(sub1[,10:12], maxCon))
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kClust$size == 29
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[1][wool])
names(pm0) <- make.names(cnames[1][1:5])
names(pm0) <- make.names(cnames[1][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0["Sample.Value"]
x0 <- pm0$Sample.Value
str(x0)
with(is.na(x0), mean)
mean(is.na(x0))
pm1 <- make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
ls
ls()
head(my2012)
x1 <- pm1$Sample.Value
pm1 <- pm0
x1 <- pm1$Sample.Value
mean(is.ma(x1))
mean(is.na(x1))
summary(x0)
summary(x1)
bye()
bye()
swirl()
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
x1 <- pm1$Sample.Value
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
bye()
swirl()
dim(pm0)
head(pm0)
names(pm0)
cna,es
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, ((State.Code == 26)&(county.site %in% both)))
cnt0 <- subset(pm0, ((State.Code == 36)&(county.site %in% both)))
cnt0 <- subset(pm0, (State.Code == 36)&(county.site %in% both))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0aub$Sample.Value
x0sub <- pm0sub$Sample.Value
x10sub <- pm1sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE))
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, FUN = mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, FUN = mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1,52), mrg[,3], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1,52), mrg[,3]))
with(mrg, plot(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,3]))
with(mrg, points(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,2]))
with(mrg, points(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
?
a
?swirl
swirl
?InstallCourses
install.packages("kernlab")
library(kernlab)
ver
version
update
library(kernlab)
data(spam)
str(spam)
str(spam[1:5,])
str(spam[,1:5])
names(spam)
set.seed(3435)
trainIndicator <- rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam <- spam[trainIndicator == 1, ]
testSpam <- spam[trainIndicator == 0, ]
head(trainSaom)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ log10(trainSpam$type))
plot(log(trainSpam$capitalAve) ~ log(trainSpam$type))
plot(log(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[,1:4] +1)
)
hclust <- hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
plot(hclust)
rm(hclust)
hCluster <- hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hClusterUpdated <- hclust(dist(t(log10(trainSpam[,1:57] + 1)))
)
plot(hClusterUpdated)
?aggregate
setwd("~/R/RepData_PeerAssessment1")
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity[["date"]] <- as.Date(activity[["date"]], "%Y-%m-%d")
View(activity)
activity2 <- activity[complete.cases(activity),]
str(activity2)
table(interval)
table(activity2.interval)
table(activity2$interval)
summary(activity2$interval)
unique(activity2$interval)
View(activity)
summary(activity2$interval)
str(activity2)
daily_steps <- aggregate(x = activity2, by = date, simplify = TRUE, FUN = sum)
daily_steps <- aggregate(x = activity2, by = activity2$date, FUN = sum)
daily_steps <- aggregate(x = activity2, by = unique(activity2$date), FUN = sum)
dates <- unique(activity2$date)
View(dates)
class(dates)
class(as.list(dates))
dates <- as.list(dates)
class(dates)
View(dates)
daily_steps <- aggregate(x = activity2, by = dates, FUN = sum)
daily_steps <- aggregate(x = activity2, by = as.list(activity2$date), FUN = sum)
daily_steps <- aggregate(x = activity2$steps, by = as.list(activity2$date), FUN = sum)
class(activity2$dates)
class(activity2$date)
activity2$date <- as.list(activity2$date)
daily_steps <- aggregate(x = steps, by = date, FUN = sum, data = activity2)
daily_steps <- aggregate(x = activity2$steps, by = date, FUN = sum, data = activity2)
daily_steps <- aggregate(x = activity2$steps, by = as.list(date), FUN = sum, data = activity2)
daily_steps <- aggregate(x = activity2$steps, by = as.list(date), FUN = "sum", data = activity2)
daily_steps <- aggregate(steps, by = date, FUN = "sum", data = activity2)
daily_steps <- aggregate(activity2$steps, by = date, FUN = "sum", data = activity2)
?tapply
daily_steps <- tapply(X = activity2$steps,INDEX = activity2$date, FUN = "sum")
summary(activity2$steps)
nrow(activity2$steps)
(activity2$steps)
View(activity2$steps)
View(activity2$date)
View(activity2)
daily_steps <- tapply(X = activity$steps,INDEX = activity$date, FUN = "sum")
daily_steps
View(daily_steps)
mean_steps <- tapply(X = activity2$steps,INDEX = activity2$date, FUN = "mean")
mean_steps <- tapply(X = activity$steps,INDEX = activity$date, FUN = "mean")
median_steps <- tapply(X = activity$steps,INDEX = activity$date, FUN = "median")
View(mean_steps)
View(median_steps)
activity2 <- activity[complete.cases(activity),] # ignoring NA observations for this part of the assignment
str(actvity2)
str(activity2)
daily_steps <- tapply(X = activity2$steps,INDEX = activity2$date, FUN = "sum")
View(daily_steps)
mean_steps <- tapply(X = activity2$steps,INDEX = activity2$date, FUN = "mean")
median_steps <- tapply(X = activity2$steps,INDEX = activity2$date, FUN = "median")
View(mean_steps)
View(median_steps)
summary(daily_steps)
summary(daily_steps)$Mean
summary(daily_steps)$mean
mean(daily_steps)
head(activity2)
head(daily_steps)
table(daily_steps)
head(daily_steps, 20)
hist(daily_steps)
hist(daily_steps, freq = FALSE)
xyplot(daily_steps)
library(ggplot2)
qplot(daily_steps)
?x
?daily_steps
str(daily_steps)
qplot(data = daily_steps)
qplot(data = daily_steps, geom = "l")
qplot(x = daily_steps, geom = "l")
qplot(x = daily_steps, geom = "line")
qplot(x = daily_steps, geom = "bar")
qplot(y = daily_steps, geom = "bar")
qplot(y = daily_steps, x = x, geom = "bar")
daily_steps <- as.data.frame(daily_steps)
str(daily_steps)
row.names(daily_steps)
qplot(y = daily_steps, x = row.names(daily_steps), geom = "bar")
qplot(x = daily_steps, y = row.names(daily_steps), geom = "bar")
qplot(x = daily_steps$x, y = row.names(daily_steps), geom = "bar")
source('~/.active-rstudio-document', echo=TRUE)
interval_steps <- tapply(X = activity)
activity3 <- activity2
summary(activity3)
interval_steps <- tapply(X = activity3$steps, INDEX = activity3.interval)
interval_steps <- tapply(X = activity3$steps, INDEX = activity3$interval)
View(interval_steps)
interval_steps <- tapply(X = activity3$steps, INDEX = activity3$interval, FUN = "mean")
View(interval_steps)
plot(interval_steps)
plot(interval_steps, xlab = "hey")
plot(interval_steps, xlab = "Interval", ylab = "Mean steps")
plot(interval_steps, xlab = "Interval", ylab = "Mean steps", type = "l")
max(interval_steps)
interval_steps[interval_steps == max(interval_steps)]
max_interval_step <- interval_steps[interval_steps == max(interval_steps)]
max_interval_step
max_interval_step[,]
max_interval_step
class(max_interval_step)
max_interval_step$index
qplot(interval_steps)
?plot
plot(interval_steps, xlab = "Interval", ylab = "Mean steps", type = "l")
View(interval_steps)
row.names(interval_steps)
plot(interval_steps, xlab = row.names(interval_steps), ylab = "Mean steps", type = "l")
?plot
plot(interval_steps, lab = row.names(interval_steps), ylab = "Mean steps", type = "l")
plot(interval_steps, x = row.names(interval_steps), xlab ="Meh", ylab = "Mean steps", type = "l")
plot(x = row.names(interval_steps), y = interval_steps, xlab = "Interval", ylab = "Mean steps", type = "l")
point(y = interval_steps[interval_steps == max(interval_steps)]
)
points(y = interval_steps[interval_steps == max(interval_steps)]
)
points(y = interval_steps[interval_steps == max(interval_steps), x = 5]
)
points(10, y = interval_steps[interval_steps == max(interval_steps)]
)
max_point <- points(10, y = interval_steps[interval_steps == max(interval_steps)]
)
points(10, y = interval_steps[interval_steps == max(interval_steps)], col = "red")
points(10, y = interval_steps[interval_steps == max(interval_steps)], col = "red", fill = "red")
points(10, y = interval_steps[interval_steps == max(interval_steps)], col = "red", fill = "red", pch = 19)
points(interval_steps[interval_steps == max(interval_steps)], col = "red", fill = "red", pch = 19)
points(interval_steps[interval_steps == max(interval_steps)], col = "red", pch = 19)
max_point
max_point <- c(10, interval_steps[interval_steps == max(interval_steps)])
text(max_point)
max_point <- interval_steps[interval_steps == max(interval_steps)]
max_point_y <- interval_steps[interval_steps == max(interval_steps)]
max_point_y
dim(max_point_y)
col.names(max_point_y)
View(max_point_y)
row.names(max_point_y)
View(max_point_y)
xx <- row.names(max_point_y)
xx
xx <- row.name(max_point_y)
class(max_point_y)
row.name(max_point_y)
row.names(max_point_y)
max_point_y
max_point_y[1]
max_point_y[[1]]
max_point_y[[0]]
max_point_y[[2]]
max_point_y[[1]]
row.names(dat)[max_point_y]
row.names[max_point_y]
row.names(max_point_y)
max_point <- as.data.frame(max_point_y)
max_point
max_point[[1]]
max_point[[0]]
max_point[[2]]
row.name(max.point)
row.names(max.point)
row.names(max_point)
max_mean_steps <- as.data.frame(interval_steps[interval_steps == max(interval_steps)])
row.names(max_mean_steps)
col.names(max_mean_steps)
column.names(max_mean_steps)
colnames(max_mean_steps)
max_mean_y = max_mean_steps[[1]]
max_mean_y
max_mean_x = row.names(max_mean_steps)
max_mean_x
points(max_mean_x, max_mean_y, pch = 19, col = "red")
